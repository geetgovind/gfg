Type conversion

JavaScript is loosely typed language and most of the time operators automatically convert a value to the right type but there are also cases when we need to explicitly do type conversions.
While JavaScript provides numerous ways to convert data from one type to another but there are two most common data conversions :
 

Converting Values to String
Converting Values to Numbers

Implicit Conversion:
There are various operators and functions in JavaScript which automatically convert a value to the right type like alert() function in JavaScript accepts any value and convert it into a string. But various operator creates a problem like ‘+’ operator.
Example:

Input: "2" + "3"
Output: "23"
here + operator stands for string concatenation in this case.
But "3" - "1" gives output 2 by using Implicit Conversion.
 

Converting Values to Strings:
String() or toString() function can be used in JavaScript to convert a value to a string.
Syntax of String() function:

String(value)
Example:

Input:
var v = 1555;
var s = String(v);
Output:
now s contains "1555".
Syntax of toString() function:

variableName.toString(base)
Example:

Input:
var v = 1555;
var s = v.toString();
Output:
now s contains "1555".
For more information on toString( ) function check this article JavaScript | toString( ) function.

Converting Values to Numbers:
We can use Number() function in JavaScript to convert a value to a Number. It can convert any numerical text and boolean value to a Number. In case of strings of non-numbers it will convert it to a NaN(Not a Number).
Syntax:

Number(valueToConvert)
Example:

Input:
var s = "144";
var n = Number(s);
Output:
now n contain 144(Number).
